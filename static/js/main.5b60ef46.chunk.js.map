{"version":3,"sources":["GenreData.js","Sidebar.js","CompletedAnime.js","App.js","reportWebVitals.js","index.js"],"names":["GenreData","genre","icon","value","Sidebar","state","animeList","i","page","showSidebar","watchList","loadanimePage","bind","nextRandomAnime","getGenre","changePage","watchedAnime","this","fetch","then","res","json","setState","anime","isLoading","props","setTimeout","prevState","temp","JSON","parse","sessionStorage","getItem","push","setItem","stringify","className","onClick","toggleSidebar","style","color","to","pathname","listcomplete","map","val","key","classname","id","src","image_url","href","url","target","title","airing_start","episodes","synopsis","React","Component","CompletedAnime","location","watchedList","list","mal_id","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b60ef46.chunk.js","sourcesContent":["import React from 'react'\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nexport const GenreData = [\n    {\n        genre: \"Action\",\n        icon: <ArrowForwardIosIcon />,\n        value: 1,\n    },\n    {\n        genre: \"Adventure\",\n        icon: <ArrowForwardIosIcon />,\n        value: 2,\n    },\n    {\n        genre: \"Cars\",\n        icon: <ArrowForwardIosIcon />,\n        value: 3,\n    },\n    {\n        genre: \"Comedy\",\n        icon: <ArrowForwardIosIcon />,\n        value: 4,\n    },\n    {\n        genre: \"Dementia\",\n        icon: <ArrowForwardIosIcon />,\n        value: 5,\n    },\n    {\n        genre: \"Demons\",\n        icon: <ArrowForwardIosIcon />,\n        value: 6,\n    },\n    {\n        genre: \"Mystery\",\n        icon: <ArrowForwardIosIcon />,\n        value: 7,\n    },\n    {\n        genre: \"Drama\",\n        icon: <ArrowForwardIosIcon />,\n        value: 8,\n    },\n    {\n        genre: \"Ecchi\",\n        icon: <ArrowForwardIosIcon />,\n        value: 9,\n    },\n    {\n        genre: \"Fantasy\",\n        icon: <ArrowForwardIosIcon />,\n        value: 10,\n    },\n    {\n        genre: \"Game\",\n        icon: <ArrowForwardIosIcon />,\n        value: 11,\n    },\n    {\n        genre: \"Hentai\",\n        icon: <ArrowForwardIosIcon />,\n        value: 12,\n    },\n    {\n        genre: \"Historical\",\n        icon: <ArrowForwardIosIcon />,\n        value: 13,\n    },\n    {\n        genre: \"Horror\",\n        icon: <ArrowForwardIosIcon />,\n        value: 14,\n    },\n    {\n        genre: \"Kids\",\n        icon: <ArrowForwardIosIcon />,\n        value: 15,\n    },\n    {\n        genre: \"Magic\",\n        icon: <ArrowForwardIosIcon />,\n        value: 16,\n    },\n    {\n        genre: \"Martial Arts\",\n        icon: <ArrowForwardIosIcon />,\n        value: 17,\n    },\n    {\n        genre: \"Mecha\",\n        icon: <ArrowForwardIosIcon />,\n        value: 18,\n    },\n    {\n        genre: \"Music\",\n        icon: <ArrowForwardIosIcon />,\n        value: 19,\n    },\n    {\n        genre: \"Parody\",\n        icon: <ArrowForwardIosIcon />,\n        value: 20,\n    },\n    {\n        genre: \"Samurai\",\n        icon: <ArrowForwardIosIcon />,\n        value: 21,\n    },\n    {\n        genre: \"Romance\",\n        icon: <ArrowForwardIosIcon />,\n        value: 22,\n    },\n    {\n        genre: \"School\",\n        icon: <ArrowForwardIosIcon />,\n        value: 23,\n    },\n    {\n        genre: \"Sci Fi\",\n        icon: <ArrowForwardIosIcon />,\n        value: 24,\n    },\n    {\n        genre: \"Shoujo\",\n        icon: <ArrowForwardIosIcon />,\n        value: 25,\n    },\n    {\n        genre: \"Shoujo Ai\",\n        icon: <ArrowForwardIosIcon />,\n        value: 26,\n    },\n    {\n        genre: \"Shounen\",\n        icon: <ArrowForwardIosIcon />,\n        value: 27,\n    },\n    {\n        genre: \"Shounen Ai\",\n        icon: <ArrowForwardIosIcon />,\n        value: 28,\n    },\n    {\n        genre: \"Space\",\n        icon: <ArrowForwardIosIcon />,\n        value: 29,\n    },\n    {\n        genre: \"Sports\",\n        icon: <ArrowForwardIosIcon />,\n        value: 30,\n    },\n    {\n        genre: \"Super Power\",\n        icon: <ArrowForwardIosIcon />,\n        value: 31,\n    },\n    {\n        genre: \"Vampire\",\n        icon: <ArrowForwardIosIcon />,\n        value: 32,\n    },\n    {\n        genre: \"Yaoi\",\n        icon: <ArrowForwardIosIcon />,\n        value: 33,\n    },\n    {\n        genre: \"Yuri\",\n        icon: <ArrowForwardIosIcon />,\n        value: 34,\n    },\n    {\n        genre: \"Harem\",\n        icon: <ArrowForwardIosIcon />,\n        value: 35,\n    },\n    {\n        genre: \"Slice of Life\",\n        icon: <ArrowForwardIosIcon />,\n        value: 36,\n    },\n    {\n        genre: \"Supernatural\",\n        icon: <ArrowForwardIosIcon />,\n        value: 37,\n    },\n    {\n        genre: \"Military\",\n        icon: <ArrowForwardIosIcon />,\n        value: 38,\n    },\n    {\n        genre: \"Police\",\n        icon: <ArrowForwardIosIcon />,\n        value: 39,\n    },\n    {\n        genre: \"Psychological\",\n        icon: <ArrowForwardIosIcon />,\n        value: 40,\n    },\n    {\n        genre: \"Thriller\",\n        icon: <ArrowForwardIosIcon />,\n        value: 41,\n    },\n    {\n        genre: \"Seinen\",\n        icon: <ArrowForwardIosIcon />,\n        value: 42,\n    },\n    {\n        genre: \"Josei\",\n        icon: <ArrowForwardIosIcon />,\n        value: 43,\n    },\n]","import React from 'react'\nimport { GenreData } from './GenreData'\nimport { NavLink } from \"react-router-dom\"\n\nclass Sidebar extends React.Component{\n\n    constructor(){\n        super()\n        this.state = {\n           animeList: [\"\"],\n           i: 0,\n           page: 1,\n           showSidebar: true,\n           watchList: [],\n           genre: 1, \n            /* \n            Action: 1\n            Adventure: 2\n            Cars: 3\n            Comedy: 4\n            Dementia: 5\n            Demons: 6\n            Mystery: 7\n            Drama: 8\n            Ecchi: 9\n            Fantasy: 10\n            Game: 11\n            Hentai: 12\n            Historical: 13\n            Horror: 14\n            Kids: 15\n            Magic: 16\n            Martial Arts: 17\n            Mecha: 18\n            Music: 19\n            Parody: 20\n            Samurai: 21\n            Romance: 22\n            School: 23\n            Sci Fi: 24\n            Shoujo: 25\n            Shoujo Ai: 26\n            Shounen: 27\n            Shounen Ai: 28\n            Space: 29\n            Sports: 30\n            Super Power: 31\n            Vampire: 32\n            Yaoi: 33\n            Yuri: 34\n            Harem: 35\n            Slice Of Life: 36\n            Supernatural: 37\n            Military: 38\n            Police: 39\n            Psychological: 40\n            Thriller: 41\n            Seinen: 42\n            Josei: 43\n            */\n        }\n        this.loadanimePage = this.loadanimePage.bind(this)\n        this.nextRandomAnime = this.nextRandomAnime.bind(this)\n        this.getGenre = this.getGenre.bind(this)\n        this.changePage = this.changePage.bind(this)\n        this.watchedAnime = this.watchedAnime.bind(this)\n    }\n\n    componentDidMount(){\n        this.loadanimePage()\n    }\n\n    loadanimePage(){  \n        fetch(\"https://jikan1.p.rapidapi.com/genre/anime/\" + this.state.genre + \"/\" + this.state.page, {\n          \"method\": \"GET\",\n          \"headers\": {\n            \"x-rapidapi-key\": \"542c3ca589msh41c910fdd2fb3e6p174e03jsnb59816e25977\",\n            \"x-rapidapi-host\": \"jikan1.p.rapidapi.com\"\n          }\n        })\n        .then(res => res.json())\n        .then(json => {\n          this.setState({\n            animeList: json.anime,\n            isLoading: true\n          })\n        })\n      }\n\n    nextRandomAnime(){\n        this.setState({\n            i: this.state.i + 1\n        })\n    }\n\n    getGenre(props){\n        this.setState({\n          genre: props,\n          isLoading: false\n        })\n        setTimeout(() => {\n            this.loadanimePage()\n        }, 100)\n    }\n\n    toggleSidebar(){\n      this.setState(prevState => ({\n        showSidebar: !prevState.showSidebar\n      }))\n    }\n\n    changePage(){\n      this.setState({\n        page: this.state.page + 1\n      })\n      this.loadanimePage()\n    }\n\n    watchedAnime(){\n      //Adds anime to watchlist using session storage\n      const temp = JSON.parse(sessionStorage.getItem('mySessionStorage') || '[]')\n      temp.push(this.state.animeList[this.state.i])\n      this.state.watchList.push(this.state.animeList[this.state.i])\n      sessionStorage.setItem('mySessionStorage', JSON.stringify(temp))\n\n      this.nextRandomAnime()\n    }\n\n    render(){\n        var {isLoading, animeList, i} = this.state\n      \n          if (!isLoading){    \n            return(\n              <div>\n                Loading...\n              </div>\n            )\n          }\n          else{\n            return(\n              <div className=\"App\">\n                <div className=\"TopBar\">\n                  <button onClick={()=>{this.toggleSidebar()}}>Sidebar</button>\n                </div>\n\n                <div className=\"MainPage\">\n                  {this.state.showSidebar ? \n                  <div className=\"Sidebar\">\n                    <ul className=\"SidebarList\">\n                      {/* <h1 className=\"row\" style={{color:\"black\"}} onClick={()=>{window.location.pathname = \"/anime-generator\"}}>Home</h1>\n                      <h2 className=\"row\" style={{color:\"black\"}} onClick={()=>{window.location.pathname = \"/anime-generator/completedanimep\"}}>Watched</h2> */}\n                      <h1 className=\"row\" style={{color:\"black\"}}> <NavLink className=\"NavLink\" to=\"/\">Home</NavLink></h1>\n                      <h2 className=\"row\" style={{color:\"black\"}}> <NavLink className=\"NavLink\" to={{ pathname:\"/completedanime\", state:{listcomplete:this.state.watchList}}}>Watched</NavLink> </h2>\n                      <h2 className=\"row\" style={{color:\"black\"}}>Genre</h2>\n                      {GenreData.map((val, key) => {\n                        return(\n                          <li \n                            key={key} \n                            classname=\"row\" \n                            id={val.value===this.state.genre ? \"active\" : \"\"}\n                            onClick={() => {this.getGenre(val.value)}}\n                          >\n                            <div className=\"row\">\n                              <div id=\"icon\">{val.icon}</div>\n                              <div id=\"genre\">{val.genre}</div>\n                            </div>\n                          </li>\n                        )\n                      })}\n                    </ul>\n                  </div> : null}\n\n                  <div className=\"Randomizer\">\n                    <div className=\"Buttons\">\n                      <button onClick={this.watchedAnime}>\n                        Watched\n                      </button>\n                      <button onClick={i < 99 ? this.nextRandomAnime : this.changePage}>\n                        Next Random Anime\n                      </button>\n                    </div>\n\n                    <div className=\"Container\">\n                      <div className=\"Image\">\n                          <img src={animeList[i].image_url} />\n                      </div>\n\n                      <div className=\"Info\">\n                      <h1><a href={animeList[i].url} target=\"_blank\"> {animeList[i].title} </a></h1>\n                      <h3>Year: {animeList[i].airing_start[0]}{animeList[i].airing_start[1]}{animeList[i].airing_start[2]}{animeList[i].airing_start[3]}</h3>\n                      <h3>Episodes: {animeList[i].episodes}</h3>\n                      <h3>Synopsis: <p>{animeList[i].synopsis}</p></h3>\n                      </div>\n                    </div>                    \n                  </div>\n                </div>         \n              </div>\n            )\n          }\n    }\n}\n\nexport default Sidebar","import React from \"react\"\nimport {NavLink} from \"react-router-dom\"\n\nclass CompletedAnime extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n          isLoading: true\n        }\n      }\n      \n      componentDidMount(){\n        if (this.props.location.state != null){\n\n        }\n      }\n      \n        render(props){\n          var {isLoading} = this.state\n      \n          if (!isLoading){    \n            return(\n              <div>\n                Loading...\n              </div>\n            )\n          }\n          else{\n            var watchedList = JSON.parse(sessionStorage.getItem('mySessionStorage') || '[]');\n            \n            return (\n              <div className=\"App\">\n                {/* <div className=\"TopBar\"></div>*/}\n                <div className=\"MainPage\">\n                  <div className=\"Sidebar\">\n                    <ul className=\"SidebarList\">\n                      {/* <h1 className=\"row\" style={{color:\"black\"}} onClick={()=>{window.location.pathname = \"/anime-generator\"}}>Home</h1>\n                      <h2 className=\"row\" style={{color:\"black\"}} onClick={()=>{window.location.pathname = \"/anime-generator/completedanimep\"}}>Watched</h2> */}\n                      <h1 className=\"row\" style={{color:\"black\"}}> <NavLink className=\"NavLink\" to=\"/\">Home</NavLink></h1>\n                      <h2 className=\"row\" style={{color:\"black\"}}> <NavLink className=\"NavLink\" to=\"/completedanime\">Watched</NavLink> </h2>\n                    </ul>\n                  </div>\n                <div className=\"Randomizer\">\n                  {/* {this.props.location.state.listcomplete.map((list) => ( */}\n                  {watchedList.map((list) => (\n                    <div key={list.mal_id}>\n                      <a href={list.url} target=\"_blank\"> {list.title} </a>\n                      <div><img src={list.image_url} /></div>\n                    </div>\n                  ))}\n                </div>\n                </div>\n              </div>\n            )\n          }\n        }\n}\n\nexport default CompletedAnime","import React from 'react'\nimport './App.css'\nimport Sidebar from './Sidebar'\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\"\nimport NotFoundPage from './404'\nimport CompletedAnime from './CompletedAnime'\n\nimport { HashRouter, Route, Link } from \"react-router-dom\";\n\nclass App extends React.Component{\n\n  render(){\n      return (\n        //HashRouter will read everything after the # in the URL\n        <HashRouter> \n          <Switch>\n          <Route exact path=\"/\" component={Sidebar} />\n          <Route path=\"/completedanime\" component={CompletedAnime} />\n          {/* <Route exact path=\"/404\"  component={NotFoundPage} />\n          <Redirect to=\"/404\" /> Has to be last */}\n          </Switch>\n        </HashRouter>\n      )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}