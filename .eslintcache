[{"/Users/kevin/Documents/GitHub/anime-generator/src/index.js":"1","/Users/kevin/Documents/GitHub/anime-generator/src/App.js":"2","/Users/kevin/Documents/GitHub/anime-generator/src/reportWebVitals.js":"3","/Users/kevin/Documents/GitHub/anime-generator/src/CompletedAnime.js":"4","/Users/kevin/Documents/GitHub/anime-generator/src/Sidebar.js":"5","/Users/kevin/Documents/GitHub/anime-generator/src/404.js":"6","/Users/kevin/Documents/GitHub/anime-generator/src/GenreData.js":"7"},{"size":500,"mtime":1609061177046,"results":"8","hashOfConfig":"9"},{"size":786,"mtime":1609062938244,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1608059847153,"results":"11","hashOfConfig":"9"},{"size":3844,"mtime":1609664126064,"results":"12","hashOfConfig":"9"},{"size":6495,"mtime":1609664477385,"results":"13","hashOfConfig":"9"},{"size":177,"mtime":1609036078014,"results":"14","hashOfConfig":"9"},{"size":4283,"mtime":1608199972446,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"x4h3z",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/kevin/Documents/GitHub/anime-generator/src/index.js",[],["33","34"],"/Users/kevin/Documents/GitHub/anime-generator/src/App.js",["35","36","37","38"],"import React from 'react'\nimport './App.css'\nimport Sidebar from './Sidebar'\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\"\nimport NotFoundPage from './404'\nimport CompletedAnime from './CompletedAnime'\n\nimport { HashRouter, Route, Link } from \"react-router-dom\";\n\nclass App extends React.Component{\n\n  render(){\n      return (\n        //HashRouter will read everything after the # in the URL\n        <HashRouter> \n          <Switch>\n          <Route exact path=\"/\" component={Sidebar} />\n          <Route path=\"/completedanime\" component={CompletedAnime} />\n          {/* <Route exact path=\"/404\"  component={NotFoundPage} />\n          <Redirect to=\"/404\" /> Has to be last */}\n          </Switch>\n        </HashRouter>\n      )\n  }\n}\n\nexport default App;\n","/Users/kevin/Documents/GitHub/anime-generator/src/reportWebVitals.js",[],"/Users/kevin/Documents/GitHub/anime-generator/src/CompletedAnime.js",["39","40","41","42","43"],"import React from \"react\"\nimport {NavLink} from \"react-router-dom\"\n\nclass CompletedAnime extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n          animeList: [\"\"],\n          isLoading: true,\n          animePage: 1,\n        }\n        this.loadanimePage = this.loadanimePage.bind(this)\n        this.incrementPage = this.incrementPage.bind(this)\n        this.decrementPage = this.decrementPage.bind(this)\n      }\n      \n      componentDidMount(){\n        this.loadanimePage()\n        if (this.props.location.state != null){\n\n        }\n      }\n\n      loadWatchedAnime(){\n        console.log(this.props.location.state)\n        this.setState({animeList: this.props.location.state})\n        this.state.animeList.map((list) => (\n          <div key={list.mal_id}>\n            <a href={list.url} target=\"_blank\"> {list.title} </a>\n            <div><img src={list.image_url} /></div>\n          </div>\n        ))\n      }\n\n      incrementPage(){\n        this.setState({animePage: this.state.animePage + 1})\n        setTimeout(() => {\n          this.loadanimePage()\n        }, 100)\n      }\n      \n      decrementPage(){\n        this.setState({animePage: this.state.animePage - 1})\n        setTimeout(() => {\n          this.loadanimePage()\n        }, 100)\n      }\n      \n      loadanimePage(){  \n        this.setState({isLoading: false})\n        fetch(\"https://jikan1.p.rapidapi.com/genre/anime/1/\" + this.state.animePage, {\n          \"method\": \"GET\",\n          \"headers\": {\n            \"x-rapidapi-key\": \"542c3ca589msh41c910fdd2fb3e6p174e03jsnb59816e25977\",\n            \"x-rapidapi-host\": \"jikan1.p.rapidapi.com\"\n          }\n        })\n        .then(res => res.json())\n        .then(json => {\n          this.setState({\n            animeList: json.anime,\n            isLoading: true\n          })\n            console.log(this.state.animeList)\n        })\n      }\n      \n        render(props){\n          var {isLoading, animeList} = this.state\n      \n          if (!isLoading){    \n            return(\n              <div>\n                Loading...\n              </div>\n            )\n          }\n          else{\n            var watchedList = JSON.parse(sessionStorage.getItem('mySessionStorage') || '[]');\n            return (\n              <div className=\"App\">\n                {/* <div className=\"TopBar\"></div>*/}\n                <div className=\"MainPage\">\n                  <div className=\"Sidebar\">\n                    <ul className=\"SidebarList\">\n                      {/* <h1 className=\"row\" style={{color:\"black\"}} onClick={()=>{window.location.pathname = \"/anime-generator\"}}>Home</h1>\n                      <h2 className=\"row\" style={{color:\"black\"}} onClick={()=>{window.location.pathname = \"/anime-generator/completedanimep\"}}>Watched</h2> */}\n                      <h1 className=\"row\" style={{color:\"black\"}}> <NavLink className=\"NavLink\" to=\"/\">Home</NavLink></h1>\n                      <h2 className=\"row\" style={{color:\"black\"}}> <NavLink className=\"NavLink\" to=\"/completedanime\">Watched</NavLink> </h2>\n                    </ul>\n                  </div>\n                <div className=\"Randomizer\">\n                  {/* <button onClick={this.decrementPage}>Previous Page</button>\n                  <button onClick={this.incrementPage}>Next Page</button>\n                  <h1>Page: {this.state.animePage}</h1> */}\n                  {/* {this.props.location.state.listcomplete.map((list) => ( */}\n                  {watchedList.map((list) => (\n                    <div key={list.mal_id}>\n                      <a href={list.url} target=\"_blank\"> {list.title} </a>\n                      <div><img src={list.image_url} /></div>\n                    </div>\n                  ))}\n                </div>\n                </div>\n              </div>\n            )\n          }\n        }\n}\n\nexport default CompletedAnime","/Users/kevin/Documents/GitHub/anime-generator/src/Sidebar.js",["44","45"],"/Users/kevin/Documents/GitHub/anime-generator/src/404.js",[],"/Users/kevin/Documents/GitHub/anime-generator/src/GenreData.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":4,"column":27,"nodeType":"52","messageId":"53","endLine":4,"endColumn":33},{"ruleId":"50","severity":1,"message":"54","line":4,"column":43,"nodeType":"52","messageId":"53","endLine":4,"endColumn":51},{"ruleId":"50","severity":1,"message":"55","line":5,"column":8,"nodeType":"52","messageId":"53","endLine":5,"endColumn":20},{"ruleId":"50","severity":1,"message":"56","line":8,"column":29,"nodeType":"52","messageId":"53","endLine":8,"endColumn":33},{"ruleId":"57","severity":1,"message":"58","line":29,"column":32,"nodeType":"59","endLine":29,"endColumn":47},{"ruleId":"60","severity":1,"message":"61","line":30,"column":18,"nodeType":"62","endLine":30,"endColumn":46},{"ruleId":"50","severity":1,"message":"63","line":69,"column":27,"nodeType":"52","messageId":"53","endLine":69,"endColumn":36},{"ruleId":"57","severity":1,"message":"58","line":99,"column":42,"nodeType":"59","endLine":99,"endColumn":57},{"ruleId":"60","severity":1,"message":"61","line":100,"column":28,"nodeType":"62","endLine":100,"endColumn":56},{"ruleId":"60","severity":1,"message":"61","line":182,"column":27,"nodeType":"62","endLine":182,"endColumn":63},{"ruleId":"57","severity":1,"message":"58","line":186,"column":54,"nodeType":"59","endLine":186,"endColumn":69},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'NotFoundPage' is defined but never used.","'Link' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'animeList' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]