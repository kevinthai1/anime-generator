[{"/Users/kevin/Documents/GitHub/anime-generator/src/index.js":"1","/Users/kevin/Documents/GitHub/anime-generator/src/App.js":"2","/Users/kevin/Documents/GitHub/anime-generator/src/reportWebVitals.js":"3","/Users/kevin/Documents/GitHub/anime-generator/src/CompletedAnime.js":"4","/Users/kevin/Documents/GitHub/anime-generator/src/Sidebar.js":"5","/Users/kevin/Documents/GitHub/anime-generator/src/404.js":"6","/Users/kevin/Documents/GitHub/anime-generator/src/GenreData.js":"7"},{"size":500,"mtime":1608059847153,"results":"8","hashOfConfig":"9"},{"size":670,"mtime":1608192946708,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1608059847153,"results":"11","hashOfConfig":"9"},{"size":2902,"mtime":1608268698064,"results":"12","hashOfConfig":"9"},{"size":5632,"mtime":1608584608170,"results":"13","hashOfConfig":"9"},{"size":169,"mtime":1608167796399,"results":"14","hashOfConfig":"9"},{"size":4283,"mtime":1608199972446,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"x4h3z",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/kevin/Documents/GitHub/anime-generator/src/index.js",[],["33","34"],"/Users/kevin/Documents/GitHub/anime-generator/src/App.js",["35"],"import React from 'react'\nimport './App.css'\nimport Sidebar from './Sidebar'\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from \"react-router-dom\"\nimport NotFoundPage from './404'\nimport CompletedAnime from './CompletedAnime'\n\nclass App extends React.Component{\n\n  render(){\n      return (\n        <Router>\n          <Switch>\n          <Route exact path=\"/\" component={Sidebar} />\n          <Route exact path=\"/completedanime\" component={CompletedAnime} />\n          <Route exact path=\"/404\"  component={NotFoundPage} />\n          <Redirect to=\"/404\" /> {/* Has to be last */}\n          </Switch>\n        </Router>\n      )\n  }\n}\n\nexport default App;\n","/Users/kevin/Documents/GitHub/anime-generator/src/reportWebVitals.js",[],"/Users/kevin/Documents/GitHub/anime-generator/src/CompletedAnime.js",["36"],"import React from \"react\"\n\nclass CompletedAnime extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n          animeList: [\"\"],\n          isLoading: true,\n          animePage: 1,\n        }\n        this.loadanimePage = this.loadanimePage.bind(this)\n        this.incrementPage = this.incrementPage.bind(this)\n        this.decrementPage = this.decrementPage.bind(this)\n      }\n      \n      componentDidMount(){\n        this.loadanimePage()\n      }\n      \n      incrementPage(){\n        this.setState({animePage: this.state.animePage + 1})\n        setTimeout(() => {\n          this.loadanimePage()\n        }, 100)\n      }\n      \n      decrementPage(){\n        this.setState({animePage: this.state.animePage - 1})\n        setTimeout(() => {\n          this.loadanimePage()\n        }, 100)\n      }\n      \n      loadanimePage(){  \n        this.setState({isLoading: false})\n        fetch(\"https://jikan1.p.rapidapi.com/genre/anime/1/\" + this.state.animePage, {\n          \"method\": \"GET\",\n          \"headers\": {\n            \"x-rapidapi-key\": \"542c3ca589msh41c910fdd2fb3e6p174e03jsnb59816e25977\",\n            \"x-rapidapi-host\": \"jikan1.p.rapidapi.com\"\n          }\n        })\n        .then(res => res.json())\n        .then(json => {\n          this.setState({\n            animeList: json.anime,\n            isLoading: true\n          })\n            console.log(this.state.animeList)\n        })\n      }\n      \n        render(){\n          var {isLoading, animeList} = this.state\n      \n          if (!isLoading){    \n            return(\n              <div>\n                Loading...\n              </div>\n            )\n          }\n          else{\n            return (\n              <div className=\"App\">\n                {/* <div className=\"TopBar\"></div>*/}\n                <div className=\"MainPage\">\n                  <div className=\"Sidebar\">\n                    <ul className=\"SidebarList\">\n                      <h1 className=\"row\" style={{color:\"black\"}} onClick={()=>{window.location.pathname = \"\"}}>Home</h1>\n                      <h2 className=\"row\" style={{color:\"black\"}} onClick={()=>{window.location.pathname = \"/completedanime\"}}>Watched</h2>\n                    </ul>\n                  </div>\n\n                {/* <div className=\"CompletedConatiner\">\n                  <button onClick={this.decrementPage}>Previous Page</button>\n                  <button onClick={this.incrementPage}>Next Page</button>\n                  <h1>Page: {this.state.animePage}</h1>\n                  {animeList.map((list) => (\n                    <div key={list.mal_id}>\n                      <a href={list.url} target=\"_blank\"> {list.title} </a>\n                      <div><img src={list.image_url} /></div>\n                    </div>\n                  ))}\n                </div> */}\n                </div>\n              </div>\n            )\n          }\n        }\n}\n\nexport default CompletedAnime","/Users/kevin/Documents/GitHub/anime-generator/src/Sidebar.js",["37","38"],"/Users/kevin/Documents/GitHub/anime-generator/src/404.js",[],"/Users/kevin/Documents/GitHub/anime-generator/src/GenreData.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":4,"column":50,"nodeType":"45","messageId":"46","endLine":4,"endColumn":54},{"ruleId":"43","severity":1,"message":"47","line":54,"column":27,"nodeType":"45","messageId":"46","endLine":54,"endColumn":36},{"ruleId":"48","severity":1,"message":"49","line":168,"column":27,"nodeType":"50","endLine":168,"endColumn":63},{"ruleId":"51","severity":1,"message":"52","line":172,"column":54,"nodeType":"53","endLine":172,"endColumn":69},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'animeList' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]